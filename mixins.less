.opacity (@opacity: 0.5) {
	-webkit-opacity: 	@opacity;
	-moz-opacity: 		@opacity;
	opacity: 		@opacity;
}

.text-shadow (@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: @string;
}


.box-shadow (@x: 0px, @y: 3px, @blur: 5px, @spread, @alpha: 0.5) {
    -webkit-box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
    -moz-box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
    box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
}
.box-shadow-custom-color (@x: 0px, @y: 3px, @blur: 5px, @r: 0, @g: 0, @b: 0, @alpha: 0.5) {
    -webkit-box-shadow: @x @y @blur rgba(@r, @g, @b, @alpha);
    -moz-box-shadow: @x @y @blur rgba(@r, @g, @b, @alpha);
    box-shadow: @x @y @blur rgba(@r, @g, @b, @alpha);
}
.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
    -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

.border-radius (@radius: 5px) {
    -webkit-border-radius:  @radius;
    -moz-border-radius:     @radius;
    border-radius:          @radius;
}
.border-radius-custom (@topleft: 5px, @topright: 5px, @bottomleft: 5px, @bottomright: 5px) {
    -webkit-border-radius: @topleft @topright @bottomright @bottomleft;
    -moz-border-radius: @topleft @topright @bottomright @bottomleft;
    border-radius: @topleft @topright @bottomright @bottomleft;
}
.border-radiuses (@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
	-webkit-border-top-right-radius:    @topright;
	-webkit-border-bottom-right-radius: @bottomright;
	-webkit-border-bottom-left-radius:  @bottomleft;
	-webkit-border-top-left-radius:     @topleft;

	-moz-border-radius-topright:        @topright;
	-moz-border-radius-bottomright:     @bottomright;
	-moz-border-radius-bottomleft:      @bottomleft;
	-moz-border-radius-topleft:         @topleft;

	border-top-right-radius:            @topright;
	border-bottom-right-radius:         @bottomright;
	border-bottom-left-radius:          @bottomleft;
	border-top-left-radius:             @topleft;

	-moz-background-clip:    padding; 
	-webkit-background-clip: padding-box; 
	background-clip:         padding-box; 
}


.transition (@prop: all, @time: 1s, @ease: linear) {
    -webkit-transition: @prop @time @ease;
    -moz-transition: @prop @time @ease;
    -o-transition: @prop @time @ease;
    -ms-transition: @prop @time @ease;
    transition: @prop @time @ease;
}
.transition-quick (@transition) {
	-webkit-transition: @transition;  
	-moz-transition:    @transition;
	-ms-transition:     @transition; 
	-o-transition:      @transition;  
}


.transform (@rotate: 90deg, @scale: 1, @skew: 1deg, @translate: 10px) {
    -webkit-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    -moz-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    -o-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    -ms-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
}

.transform-matrix (@a:1, @c:0, @b:0.5, @d:0.5, @tx:0, @ty:0) {
	-webkit-transform: matrix(@a, @c, @b, @d, @tx, @ty);
	-o-transform: matrix(@a, @c, @b, @d, @tx, @ty);
	-ms-transform:matrix(@a, @c, @b, @d, @tx, @ty);
	transform: matrix(@a, @c, @b, @d, @tx, @ty);
}

.gradient (@origin: left, @start: #ffffff, @stop: #000000) {
    background-color: @start;
    background-image: -webkit-linear-gradient(@origin, @start, @stop);
    background-image: -moz-linear-gradient(@origin, @start, @stop);
    background-image: -o-linear-gradient(@origin, @start, @stop);
    background-image: -ms-linear-gradient(@origin, @start, @stop);
    background-image: linear-gradient(@origin, @start, @stop);
}
.quick-gradient (@origin: left, @alpha: 0.2) {
    background-image: -webkit-linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
    background-image: -moz-linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
    background-image: -o-linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
    background-image: -ms-linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
    background-image: linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
}

.reflect (@length: 50%, @opacity: 0.2){
    -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(@length, transparent), to(rgba(255,255,255,@opacity)));
}



/** animation-timing-function	ease, ease-out, ease-in, ease-in-out, linear, cubic-bezier(x1, y1, x2, y2) (e.g. cubic-bezier(0.5, 0.2, 0.3, 1.0))
    animation-duration	Xs or Xms
    animation-delay	Xs or Xms
    animation-iteration-count	X
    animation-fill-mode	forwards, backwards, both, none
    animation-direction	normal, alternate
    animation-play-state	paused, running, running
    @keyframes @name{

    }
*/
.animation (@name, @duration: 1s, @timing-function, @delay: 0, @direction, @iteration-count, @fill-mode: none, @play-state: running) {
	-webkit-animation: @name @duration @timing-function @delay @direction @iteration-count @fill-mode @play-state;
	-moz-animation:    @name @duration @timing-function @delay @direction @iteration-count @fill-mode @play-state;
    -ms-animation:     @name @duration @timing-function @delay @direction @iteration-count @fill-mode @play-state;
    animation:         @name @duration @timing-function @delay @direction @iteration-count @fill-mode @play-state;
}

.scale (@factor) {
	-webkit-transform:   scale(@factor);
	-moz-transform: 	 scale(@factor);
	-ms-transform: 		 scale(@factor);
    -o-transform: 		 scale(@factor);
    transform:           scale(@factor);
}
.scale3D (@x, @y, @z) {
	-webkit-transform:   scale3d(@x, @y, @z);
	-moz-transform: 	 scale3d(@x, @y, @z);
	-ms-transform: 		 scale3d(@x, @y, @z);
    -o-transform: 		 scale3d(@x, @y, @z);
    transform:           scale3d(@x, @y, @z);
}

.rotate (@deg) {
	-webkit-transform:   rotate(@deg);
	-moz-transform: 	 rotate(@deg);
	-ms-transform: 		 rotate(@deg);
    -o-transform: 		 rotate(@deg);
    transform: 		     rotate(@deg);
}
.rotateX(@deg) {
	-webkit-transform:   rotateX(@deg);
	-moz-transform: 	 rotateX(@deg);
	-ms-transform: 		 rotateX(@deg);
    -o-transform: 		 rotateX(@deg);
    transform: 		     rotateX(@deg);
}
.rotateY(@deg) {
	-webkit-transform:   rotateY(@deg);
	-moz-transform: 	 rotateY(@deg);
	-ms-transform: 		 rotateY(@deg);
    -o-transform: 		 rotateY(@deg);
    transform: 		     rotateY(@deg);
}
.rotateZ(@deg) {
	-webkit-transform:   rotateZ(@deg);
	-moz-transform: 	 rotateZ(@deg);
	-ms-transform: 		 rotateZ(@deg);
    -o-transform: 		 rotateZ(@deg);
    transform: 		     rotateZ(@deg);
}
.rotate3D(@x, @y, @z, @deg) {
	-webkit-transform:   rotate3d(@x, @y, @z,@deg);
	-moz-transform: 	 rotate3d(@x, @y, @z,@deg);
	-ms-transform: 		 rotate3d(@x, @y, @z,@deg);
    -o-transform: 		 rotate3d(@x, @y, @z,@deg);
    transform: 		     rotate3d(@x, @y, @z,@deg);
}

/** Skew 
* Params: x , y
*/
.skew (@x, @y) {
	-webkit-transform:   skew(@x, @y);
	-moz-transform: 	 skew(@x, @y);
	-ms-transform: 		 skew(@x, @y);
    -o-transform: 		 skew(@x, @y);
    transform: 		     skew(@x, @y);
}

.skewX(@x){
    -webkit-transform:  skewX(@x);
    -moz-transform:     skewX(@x);
    -ms-transform:      skewX(@x);
    -o-transform:       skewX(@x);
    transform:          skewX(@x);
}
.skewY(@y){
    -webkit-transform:  skewY(@y);
    -moz-transform:     skewY(@y);
    -ms-transform:      skewY(@y);
    -o-transform:       skewY(@y);
    transform:          skewY(@y);
}
.translate (@x, @y:0) {
	-webkit-transform:   translate(@x, @y);
	-moz-transform: 	 translate(@x, @y);
	-ms-transform: 		 translate(@x, @y);
    -o-transform: 		 translate(@x, @y);
    transform: 		     translate(@x, @y);
}
.translate3d (@x, @y: 0, @z: 0) {
	-webkit-transform:   translate3d(@x, @y, @z);
	-moz-transform: 	 translate3d(@x, @y, @z);
	-ms-transform: 		 translate3d(@x, @y, @z);
    -o-transform: 		 translate3d(@x, @y, @z);
    transform: 		     translate3d(@x, @y, @z);
}
.perspective (@value: 1000) {
	-webkit-perspective:@value;
	-moz-perspective: 	@value;
	-ms-perspective: 	@value;
	perspective: 		@value;
}
.transform-origin (@x:center, @y:center) {
	-webkit-transform-origin: @x @y;
	-moz-transform-origin:    @x @y;
	-ms-transform-origin:     @x @y;
	-o-transform-origin:      @x @y;
}

.content-columns(@width, @count, @gap) {
    -webkit-column-width:   @width;
    -moz-column-width:      @width;
    column-width:           @width;
    -webkit-column-count:   @count;
    -moz-column-count:      @count;
    column-count:           @count;
    -webkit-column-gap:     @gap;
    -moz-column-gap:        @gap;
    column-gap:             @gap;
            
}